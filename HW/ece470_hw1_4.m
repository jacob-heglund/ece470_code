#1.4.5 (transform vectors using pose matrix)
#{
T_2in6 = [-0.16132909 -0.29977915 0.94026878 -0.56674764; -0.65400475 0.74598669 0.12562499 0.13378883; -0.73908775 -0.59467329 -0.31640634 0.77345277; 0.00000000 0.00000000 0.00000000 1.00000000];
#vectors always have 0 in the 4th entry when working with pose
v_in2 = [0.30829356; 0.83046937; -0.41564069; 0];

v_in6 = (T_2in6*v_in2)(1:3);
fprintf(mat2str(v_in6,6));
nl();
#}
#1.4.6 - transform points using pose matrix
#{
T_1in0 = [-0.75493673 -0.06649173 -0.65241811 -0.04865440; 0.28184041 0.86539063 -0.41432479 0.32378727; 0.59214569 -0.49666679 -0.63457511 0.25106123; 0.00000000 0.00000000 0.00000000 1.00000000];
#points always have a 1 in the 4th entry when working with pose
p_in1 = [0.91985618; -0.73214137; 0.28266933; 1];

p_in0 = (T_1in0*p_in1)(1:3);
fprintf(mat2str(p_in0,6));
nl();
#}
#1.4.7 - invert pose
#{
T_0in8 = [-0.32314581 -0.46582049 -0.82376457 -0.79080309; -0.67552852 0.72314978 -0.14392920 -0.29268592; 0.66275034 0.50996634 -0.54835784 -0.47895206; 0.00000000 0.00000000 0.00000000 1.00000000];
R_0in8 = T_0in8(1:3,1:3);
v_0in8 = T_0in8(1:3, 4);

T_8in0 = [R_0in8' -(R_0in8)'*v_0in8; 0 0 0 1];

fprintf(mat2str(T_8in0, 6));
nl();
#}
#1.4.8 - consecutive changes in pose
T_0in6 = [-0.07982295 0.91884739 0.38645538 0.51431077; -0.04084440 0.38435194 -0.92228267 -0.67571530; -0.99597190 -0.08940386 0.00684967 -0.05390784; 0.00000000 0.00000000 0.00000000 1.00000000];
T_6in8 = [0.07562803 -0.86447794 -0.49694897 -0.13989945; 0.09823788 -0.48949209 0.86645647 0.10100069; -0.99228510 -0.11434761 0.04790515 0.74007354; 0.00000000 0.00000000 0.00000000 1.00000000];
T_0in8 = T_0in6*T_6in8;

R_0in8 = T_0in8(1:3,1:3);
v_0in8 = T_0in8(1:3, 4);

T_8in0 = [R_0in8' -(R_0in8)'*v_0in8; 0 0 0 1];
fprintf(mat2str(T_8in0,6));
nl();

















